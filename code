Exploratory Visualization with ggplot2 - CHIS
10-02-18

# Install packages
install.packages(“tidyverse”)

# Explore the dataset (“adult”) with summary and str
str(adult)
summary(adult)

# Explore the data by creating  two histograms: on for age and one for BMI
#Age histogram
ggplot(adult, aes(x = SRAGE_P)) +
geom_histogram()

# BMI value histogram
ggplot(adult, aes(x = BMI_P)) +
geom_histogram()

# Plot a binned distribution of age, filling each bar according to BMI
ggplot(adult, aes(x= SRAGE_P, fill = factor(RBMI))) +
geom_histogram(binwidth = 1)

# Which groups are over or under represented in the dataset?

# Data Cleaning

# Due to an unusual spike of adults with 85 years of age, keep only the observations of adults that are 84 or younger.
adult <- adult[adult$SRAGE_P <= 84, ] 

# Due to a long positive tail on the BMI plot, keep adults with BMI at least 16 and less than 52
adult <- adult[adult$BMI_P >= 16 & adult$BMI_P < 52, ]

# Relabel the race variable
adult$RACEHPR2 <- factor(adult$RACEHPR2, labels = c("Latino", "Asian", "African American", "White"))

# Relabel the BMI categories variable
adult$RBMI <- factor(adult$RBMI, labels = c("Under-weight", "Normal-weight", "Over-weight", "Obese"))

#Plotting

# The color scale used in the plot
BMI_fill <- scale_fill_brewer("BMI Category", palette = "Reds")

# Theme to fix category display in faceted plot
fix_strips <- theme(strip.text.y = element_text(angle = 0, hjust = 0, vjust = 0.1, size = 14),
                    strip.background = element_blank(),
                    legend.position = "none")

# Plot a faceted histogram, add BMI_fill and customizations
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) + 
geom_histogram(binwidth = 1) +
fix_strips +
BMI_fill +
facet_grid(RBMI~.) +
theme_classic()

# Alternatively, plot a histogram that shows the frequency of the observation in each category.
ggplot(adult, aes (x = SRAGE_P, fill= factor(RBMI))) +
geom_histogram(aes(y = ..count../sum(..count..)), binwidth = 1, position = "fill") +
BMI_fill

# Plot a faceted frequency histogram

# Create DF with table()
DF <- table(adult$RBMI, adult$SRAGE_P)

# Use apply on DF to get frequency of each group
DF_freq <- apply(DF, 2, function(x) x/sum(x))

# Load reshape2 and use melt on DF to create DF_melted
library(reshape2)
DF_melted <- melt(DF_freq)

# Change names of DF_melted
names(DF_melted) <- c("FILL", "X", "value")

# Add code to make this a faceted plot
ggplot(DF_melted, aes(x = X, y = value, fill = FILL)) +
geom_col(position = "stack") +
BMI_fill + 
facet_grid(FILL ~ .) # Facets

# While this plot says a lot about the data, it does not show the n in each age group.

# Marimekko/Mosaic Plot

# The initial contingency table
DF <- as.data.frame.matrix(table(adult$SRAGE_P, adult$RBMI))

# Create groupSum, xmax and xmin columns
DF$groupSum <- rowSums(DF)
DF$xmax <- cumsum(DF$groupSum)
DF$xmin <- DF$xmax - DF$groupSum

# The groupSum column needs to be removed
DF$groupSum <- NULL

# Copy row names to variable X
DF$X <- row.names(DF)

# Melt the dataset
library(reshape2)
DF_melted <- melt(DF, id.vars = c("X", "xmin", "xmax"), variable.name = "FILL")

# dplyr call to calculate ymin and ymax 
library(dplyr)
DF_melted <- DF_melted %>%
  group_by(X) %>%
  	mutate(ymax = cumsum(value/sum(value)),
         	ymin = ymax - value/sum(value))

# Plot rectangles
library(ggthemes)
ggplot(DF_melted, aes(ymin = ymin,
                 	ymax = ymax,
                 	xmin = xmin,
                 	xmax = xmax,
                 	fill = FILL)) +
geom_rect(colour = "white") +
scale_x_continuous(expand = c(0,0)) +
scale_y_continuous(expand = c(0,0)) +
BMI_fill +
theme_tufte()


# Adding statistics

# Perform chi.sq test (RBMI and SRAGE_P)
results <- chisq.test(table(adult$RBMI, adult$SRAGE_P))

# Melt results$residuals and store as resid
resid <- melt(results$residuals)

# Change names of resid
names(resid) <- c("FILL", "X", "residual")

# merge the two datasets:
DF_all <- merge(DF_melted, resid)

# Update plot command
p <- ggplot(DF_all, aes(ymin = ymin,
                  	 ymax = ymax,
                 	 xmin = xmin,
                 	 xmax = xmax,
                  	 fill = residual)) +
  	geom_rect() +
  	scale_fill_gradient2() +
  	scale_x_continuous(expand = c(0,0)) +
  	scale_y_continuous(expand = c(0,0)) +
  	theme_tufte()

# Adding text

# Position for labels on y axis
index <- DF_all$xmax == max(DF_all$xmax)
DF_all$yposn <- DF_all$ymin[index] + (DF_all$ymax[index] - DF_all$ymin[index])/2

# Geom_text for BMI (i.e. the fill axis)
p1 <- p %+% DF_all + 
  geom_text(aes(x = max(xmax), 
               y = yposn,
               label = FILL),
            size = 3, hjust = 1,
            show.legend  = FALSE)
p1

# Position for labels on x axis
DF_all$xposn <- DF_all$xmin + (DF_all$xmax - DF_all$xmin)/2

# geom_text for ages (i.e. the x axis)
p1 %+% DF_all + 
  geom_text(aes(x = xposn, label = X),
            y = 1, angle = 90,
            size = 3, hjust = 1,
            show.legend = FALSE)
